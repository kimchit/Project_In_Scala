class TicTacToeGame {
	static Board board;
	static Piece nPiece,cPiece;
	static int callCounter;
	static boolean isDisplay;
	static int p1;

	function void init() {
		do InputUtil.init();
		let nPiece = Piece.new(1); //"o"
		let cPiece = Piece.new(2); //"X"
		return;
	}

	function void resetStat() {
		let p1 =0;
		return;
	}

	// 1-continue, 2-draw and 3-win;
	function int processBoard() {
		do board.evaluateBoard(); //evaluates the current status of the board, and updates it's status
		if(board.isWin()) { //if one of the players won, draw the line on the winning sequence
			do board.drawWin();
		}

		if(board.isWin()) {
			return 3;
		}
		if(board.isDraw()) {
			return 2;
		}

		return 1;
	}

	// 0-quit, 1-continue, 2-draw, 3-win
	function int play(int player,Piece p) {
		var boolean validPlayerInput;
		var int input;
		var Array playerMove,playerMove2;
		let validPlayerInput = false;

		if(player=0) { // human1

			while(~validPlayerInput) { // checks that the player input is!
				let input = InputUtil.readInput("Enter move (1 to 9 or 0 to restart):");
				if(input=0) {
					return 0; // restart game!
				}
				let playerMove = TicTacToeGame.inputToMove(input); //an array that contains the requested space
				let validPlayerInput = board.isFree(playerMove[0],playerMove[1]); //verify that the space is empty
			}

			do board.makeMove(playerMove[0],playerMove[1],p); //updates the system to input the players move
			do board.drawMove(playerMove[0],playerMove[1],p); //updates the screen to draw the players move
			do playerMove.dispose();
			return TicTacToeGame.processBoard(); //return 3 if the player won, 2 if there is a draw, 1 otherwise
		}else {//human2
			while(~validPlayerInput) { // checks that the player input is!
        				let input = InputUtil.readInput("Enter move (1 to 9 or 0 to restart):");
        				if(input=0) {
        					return 0; // restart game!
        				}
        				let playerMove2 = TicTacToeGame.inputToMove(input); //an array that contains the requested space
        				let validPlayerInput = board.isFree(playerMove2[0],playerMove2[1]); //verify that the space is empty
        			}

        			do board.makeMove(playerMove2[0],playerMove2[1],p); //updates the system to input the players move
        			do board.drawMove(playerMove2[0],playerMove2[1],p); //updates the screen to draw the players move
        			do playerMove2.dispose();
        			return TicTacToeGame.processBoard(); //return 3 if the player2 won, 2 if there is a draw, 1 otherwise

		}
	}

	function void startGame() {
		var int currentPlayer,currentPiece; //  0 for you and 1 for other player
		var boolean gameOver;
		var int gameStatus;
		do TicTacToeGame.showCredits();

		do InputUtil.showMessage("Press enter to start the game!");
		do TicTacToeGame.seedGame();

		while(true) {
			let currentPlayer = InputUtil.waitForZeroOrOne("Which player is going first? (0 for x, 1 for o): ");
			if(currentPlayer=0){
			    let currentPiece = cPiece;
			    }
			else{
			    let currentPiece = nPiece;}

			let board = Board.new(200,60);
			let gameOver = false;
			while(~gameOver) {
				let gameStatus = TicTacToeGame.play(currentPlayer,currentPiece);

				if(gameStatus=0) {
					let gameOver = true;
				}
				if(gameStatus=1) { // it's the other player's turn to play
					let currentPlayer = TicTacToeGame.getOtherPlayer(currentPlayer);
					let currentPiece = TicTacToeGame.getOtherPiece(currentPiece);
				}
				if(gameStatus=2) { //it's a draw
					do InputUtil.showMessage("Game drawn! Press enter to restart!");
					do TicTacToeGame.seedGame();
					let gameOver = true;
				}
				if(gameStatus = 3) {
					do InputUtil.showMessage("Congratulations! Game over, press enter to restart");
					do TicTacToeGame.seedGame();
					let gameOver = true;
				}
			}
			do board.dispose();// start with a new board!
		}

		return;
	}

	function int getOtherPiece(Piece p) {
		if(p = nPiece) {
			return cPiece;
		}else {
			return nPiece;
		}
	}

	function int getOtherPlayer(int p) {
		if(p=0) {
			return 1;
		}else {
			return 0;
		}
	}

   //returns an array with the row and
	function Array inputToMove(int input) {
		var Array moves;
		let moves = Array.new(2);
		let moves[0] = (input-1)/3 ; //row number :0,1,2
		let moves[1] = (input-1)-(3*moves[0]); //column number : 0,1,2
		return moves;

	}

	//prints credits to the screen
	function void showCredits() {
		do Output.moveCursor(20,16);
		do Output.printString("Tic Tac Toe in Jack Language");
		do Output.moveCursor(21,22);
		do Output.printString("By Atara Ginsburg And Kimchit Choen");
		return;
	}

}